react.creatElement returns an object. when we render the element to the dom then it become HTML element.
ReactDom helps to convert the react element to HTML element

JSX is a JS syntax to create react elements, It is not an HTML in Javascript. its a html or xml like syntax
JSX IS transpiled before it reaches to the js engine and its transpiling is done by the babel. 
JSX attributes has to be camelcase
Multiple line jsx is needed to wrap between round brackets, That is how babel understands starting and the ending of the element
JSX=>Babel transpiles it to react.createelement => ReactElement-Js-Object => HTMLElement(render)

React Component -> 
 Class Based Component // old way need to extend React.Component
 Functional Component // new way

React Functional Component is a Javascript Function
    const HeadingComponent = () =>{
        return <h1>Hey This is a implementation of react functional component</h1>;
    }

Component Coposition - rendering a component inside a Functional Component
wrapping the const/variable/functional component with the curly braces helps not only to for rendering the data but also sanitize that

props: property is something that we can pass to the component.
props are just normal arguement to a function.

//Config driven UI- controlling the UI accoding the Config (eg- Location, place)

// Optional chaning is adding ? to the variable when it's output is unknown

Key Prop - Each of the Item should have a unique Key. we have to give Key every time we are using map or loop ro call a functional component.
React Optimizes it's render cycle. eg:- if 10 object is rendered and one is added to it, then without key it will re render the each object as react is not aware of the exact place where it's going to get added.
index should not be used as key 

Two types of export -> Default & Named 

Hooks -> Its a normal JS Utility Function written in react. 
UseState() UseEffect() - Most Important Hooks.
never create any state variable inside conditional blocks

UseState - > Use to create the state variable - > const [listOfResturant, setListOfResturant] = useState(default value/Null);
It is used to call local state variable inside the functional component

UseEffect - > Use to perform side effects in functional components, Use effect is called once the render cycle is finished
if no dependency array then use effect is called every render.
if the dependency array is empty then use effect is called on initial render and just once
if the dependency array has element then useeffect is called whenever the array element is updated

UseContext - > 
UseReducer
UseRef

useRouterError(react-router-dom)
useParam(react-router-dom)

reconsiliation Algorithm /React Fibre - >  new way to find the diff and update the dom. The ability to split rendering work into chunks and spreadit over multipleframes

Virtual Dom, is the react/js object of the functional component. is the representation of the Actual Dom, 
with the help of Diff algo in react the changes in rhe virtual dom of the same component is identified post an event and update the actual dom on next render cycle.



Lifecycle ->
Consutructor -> Render() -> componentDidMount -> componentDidUpdate -> componentWillUpdate


componentDidMount is used to make API calls

React Common Lifecycle consist of -> Render Phase (Consutructor -> Render()) & Commit Phase (React update DOM & componentDidMount)
first all the Render phase will be batched anc completed and then will got for the commit phase
render phase is quicker than the comit phase, comit phase takes time


// React Keys, Throtteling, Debounce, 